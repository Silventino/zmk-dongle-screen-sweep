/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#ifndef KEYMAP_DRAWER
#include "include/keys_de.h"
#endif

#if defined(KEYS_34)
    #define _(BINDING) BINDING 
#elif defined(KEYS_30)
    #define _(BINDING)
#endif

#define DEF 0
#define NAV 1
#define NUM 2
#define FUN 3 
#define INT 4

#define CT(KEY) &mt LC(KEY) KEY
#define CLOSE   &mt LA(F4) LC(W)

#define MEH     LC(LS(LALT))
#define HYPER   LC(LS(LA(LGUI)))

#define U_RDO   LC(DE_Y)
#define U_PST   LC(V)
#define U_CPY   LC(C)
#define U_CUT   LC(X)
#define U_UND   LC(DE_Z)

#include "include/keypos.h"
#include "behaviors.dtsi"
#include "combos.dtsi"
#include "macros.dtsi"

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer  {
            if-layers = <NAV NUM>;
            then-layer = <FUN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "DEF";
            bindings = <
// ╭───────────────┬─────────────┬────────────────┬─────────────────┬──────────────╮   ╭──────────────┬────────────────┬────────────────┬─────────────┬─────────────╮
    &kp V           &kp W         &kp F            &kp P             &kp B              &kp J          &kp L            &kp U            &kp DE_Y      &td_sqt_dqt
// ├───────────────┼─────────────┼────────────────┼─────────────────┼──────────────┤   ├──────────────┼────────────────┼────────────────┼─────────────┼─────────────┤
    &hml LGUI R     &hml LALT S   &hml_hwu LCTRL T &hml_hwu LSHIFT H &kp K              &kp X          &hmr_hwu RSHFT N &hmr_hwu RCTRL A &hmr LALT I   &hmr LGUI O
// ├───────────────┼─────────────┼────────────────┼─────────────────┼──────────────┤   ├──────────────┼────────────────┼────────────────┼─────────────┼─────────────┤
    _(&kp DE_Z)     &kp C         &kp G            &kp D             _(&kp Q)           _(&key_repeat) &kp M            &kp DE_COMMA     &kp DE_DOT    _(&qexcl)
// ╰───────────────┴─────────────┴────────────────┼─────────────────┼──────────────┤   ├──────────────┼────────────────┼────────────────┴─────────────┴─────────────╯
                                                   &bspc_del         &lt NAV SPACE      &lt NUM E      &qt_grv
//                                                ╰─────────────────┴──────────────╯   ╰──────────────┴────────────────╯
            >;
        };

        navigation_layer {
            display-name = "NAV";
            bindings = <
// ╭───────────────┬─────────────┬─────────────┬─────────────┬───────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬────────────────╮
    &none           &p_tab_desk   &alt_tabber   &n_tab_desk   CLOSE               &kp PG_UP     CT(HOME)      &kp UP        CT(END)       &none
// ├───────────────┼─────────────┼─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼────────────────┤
    &sk LGUI        &sk LALT      &sk LCTRL     &sk LSHFT     &sk RALT            &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT     &kp INS
// ├───────────────┼─────────────┼─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼────────────────┤
    _(&kp U_UND)    &kp U_CUT     &kp U_CPY     &kp U_PST     _(&kp U_RDO)        _(&none)      &kp BSPC      &kp TAB       &kp DEL       _(&none)
// ╰───────────────┴─────────────┴─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴────────────────╯
                                                &trans        &trans              &lt NUM RET   &trans
//                                             ╰─────────────┴───────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        number_layer {
            display-name = "NUM";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭───────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &none         &kp C_VOL_DN  &kp C_MUTE    &kp C_VOL_UP  &kp C_BRI_UP      &kp DE_DOT      &kp N7        &kp N8        &kp N9        &kp BSPC
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├───────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &kp C_BRI_DN      &kp N0          &kp N4        &kp N5        &kp N6        &kp RET
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├───────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    _(&none)      &kp C_PREV    &kp C_PP      &kp C_NEXT    _(&none)          _(&kp DE_COMMA) &kp N1        &kp N2        &kp N3        _(&none)
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├───────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              &trans        &trans            &trans          &trans
//                                           ╰─────────────┴─────────────╯   ╰───────────────┴─────────────╯
            >;
        };

        function_layer {
            display-name = "FUN";
            bindings = <
// ╭──────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &none          &kp F7        &kp F8        &kp F9        &kp F12           &bt BT_CLR    &out OUT_TOG  &none         &none         &none
// ├──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &bootloader    &kp F4        &kp F5        &kp F6        &kp F10           &out OUT_USB  &bts_0        &bts_1        &bts_2        &bootloader
// ├──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    _(&none)       &kp F1        &kp F2        &kp F3        _(&none)          _(&none)      &kns_lock     &kp PSCRN     &kp PAUSE_BREAK  _(&none)
// ╰──────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &none         &none             &none         &none
//                                            ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        }; 

        international_layer {
            display-name = "INT";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &trans        &trans        &trans        &trans        &trans            &trans        &trans        &kp DE_UE     &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &kp DE_SZ     &trans        &trans        &trans            &trans        &trans        &kp DE_AE     &trans        &kp DE_OE
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    _(&trans)     &trans        &trans        &trans        _(&trans)         _(&trans)     &trans        &trans        &trans        _(&trans)
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              &trans        &trans            &trans        &trans
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        }; 
    };
};
